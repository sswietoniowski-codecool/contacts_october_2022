@baseUri = http://localhost:5000/api
@id = 1

### Get all contacts

GET {{baseUri}}/contacts HTTP/1.1

### Search contacts

GET {{baseUri}}/contacts?search=ski HTTP/1.1

### Filter with lastName

GET {{baseUri}}/contacts?lastName=Nowak HTTP/1.1

### Get contacts order by lastName

GET {{baseUri}}/contacts?orderBy=lastName HTTP/1.1

### Get contacts order by non-existing property

GET {{baseUri}}/contacts?orderBy=FizzBuzz HTTP/1.1

### Get contacts order by lastName descending

GET {{baseUri}}/contacts?orderBy=lastName&desc=true HTTP/1.1

### Get contacts with paging

GET {{baseUri}}/contacts?orderBy=lastName&pageNumber=1&pageSize=2

### Get single contact

GET {{baseUri}}/contacts/{{id}} HTTP/1.1

### Create contact
POST {{baseUri}}/contacts HTTP/1.1
Content-Type: application/json

{
    "firstName": "Alice",
    "lastName": "Smith",
    "email": "asmith@unknown.com"
}

### Update contact
PUT {{baseUri}}/contacts/{{id}} HTTP/1.1
Content-Type: application/json

{
    "firstName": "John",
    "lastName": "Doe",
    "email": "jdoe@unknown.com"
}

### Delete contact

@newId = 5
DELETE {{baseUri}}/contacts/{{newId}} HTTP/1.1

### Patch contact
PATCH {{baseUri}}/contacts/{{id}} HTTP/1.1
Content-Type: application/json

[
    {
        "op": "replace",
        "path": "/lastName",
        "value": "Kowalski"
    },
    {
        "op": "replace",
        "path": "/firstName",
        "value": "Jan"
    }
]

### Get single contact (no caching)

GET {{baseUri}}/contacts/{{id}} HTTP/1.1
Cache-Control: max-age=0, no-cache


### Get images (show exception handling)

GET {{baseUri}}/images HTTP/1.1
Accept: application/json

### Call non-existing endpoint
GET {{baseUri}}/non-existing HTTP/1.1

### Register a new user (missing users email & roles)
OPTIONS {{baseUri}}/users/register HTTP/1.1
Content-Type: application/json

{
    "username": "User1",
    "password": "P@ssw0rd",
    "roles": []
}

### Register a new user (password doesn't match the requirements)
OPTIONS {{baseUri}}/users/register HTTP/1.1
Content-Type: application/json

{
    "username": "User1",
    "email": "user1@unknown.com",
    "password": "P@ssw0rd",
    "roles": [ "admin" ]
}

### Register a new user
OPTIONS {{baseUri}}/users/register HTTP/1.1
Content-Type: application/json

{
    "username": "User1",
    "email": "user1@unknown.com",
    "password": "Very$ecureP@ssw0rd",
    "roles": [ "User", "Admin" ]
}

### Register another user
OPTIONS {{baseUri}}/users/register HTTP/1.1
Content-Type: application/json

{
    "username": "User2",
    "email": "user2@unknown.com",
    "password": "Very$ecureP@ssw0rd",
    "roles": [ "User" ]
}

### Login using Cookie (wrong name)
OPTIONS {{baseUri}}/users/login-cookie HTTP/1.1
Content-Type: application/json

{
    "username": "User3",
    "password": "Very$ecureP@ssw0rd"
}

### Login using Cookie (wrong password)
OPTIONS {{baseUri}}/users/login-cookie HTTP/1.1
Content-Type: application/json

{
    "username": "User1",
    "password": "Very$ecureP@ssw0rd?"
}

### Login using Cookie
OPTIONS {{baseUri}}/users/login-cookie HTTP/1.1
Content-Type: application/json

{
    "username": "User1",
    "password": "Very$ecureP@ssw0rd"
}

### Logout using Cookie
OPTIONS {{baseUri}}/users/logout-cookie HTTP/1.1

### Login using JWT tokens
OPTIONS {{baseUri}}/users/login-jwt HTTP/1.1
Content-Type: application/json

{
    "username": "User1",
    "password": "Very$ecureP@ssw0rd"
}

### Get contacts using JWT tokens
@token = PUT_HERE_THE_TOKEN

GET {{baseUri}}/contacts HTTP/1.1
Authorization: Bearer {{token}}

### Login as non-admin user
OPTIONS {{baseUri}}/users/login-cookie HTTP/1.1
Content-Type: application/json

{
    "username": "User2",
    "password": "Very$ecureP@ssw0rd"
}

### Try deleting a contact (authenticated but not admin)
DELETE {{baseUri}}/contacts/{{id}} HTTP/1.1

### Login as admin user
OPTIONS {{baseUri}}/users/login-cookie HTTP/1.1
Content-Type: application/json

{
    "username": "User1",
    "password": "Very$ecureP@ssw0rd"
}

### Try deleting a contact (authenticated but not admin)
DELETE {{baseUri}}/contacts/{{id}} HTTP/1.1

